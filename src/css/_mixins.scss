@mixin font-face($type, $weight, $style) {
  @font-face {
    font-family: "Proxima Nova";
    src: url('./assets/fonts/proxima-nova-#{$type}.eot');
    src:
      url('./assets/fonts/proxima-nova-#{$type}.eot?#iefix') format("embedded-opentype"),
      url('./assets/fonts/proxima-nova-#{$type}.woff') format("woff"),
      url('./assets/fonts/proxima-nova-#{$type}.ttf') format("truetype"),
      url('./assets/fonts/proxima-nova-#{$type}.svg#proxima_nova') format('svg');
    font-weight: #{$weight};
    font-style: #{$style};
  }
}

@mixin color-fill($color, $important: false) {
  @if $important {
    color: $color !important;
    fill: $color !important;
  }

  @else {
    color: $color;
    fill: $color;
  }
}

@mixin background-color($text-color, $bg-color, $inverted: false, $grayscale: false) {
  @if $inverted {
    @include color-fill($bg-color);

    background-color: $color-white;
    border-color: $color-grey;

    &:hover {
      border-color: lighten($bg-color, 6);
    }

    &:focus {
      @include color-fill($bg-color);
    }
  }

  @else if $grayscale {
    @include color-fill($color-primary);

    background-color: $text-color;
    border-color: $color-grey;

    &:hover {
      @include color-fill($text-color);

      background-color: $bg-color;
      border-color: $bg-color;
    }

    &:focus {
      @include color-fill($text-color);
    }
  }

  @else {
    @include color-fill($text-color);

    background-color: $bg-color;
    border-color: $bg-color;

    &:hover {
      @include color-fill($text-color);

      background-color: lighten($bg-color, 6);
      border-color: lighten($bg-color, 6);
    }

    &:focus {
      @include color-fill($text-color);
    }
  }

  &:hover {
    text-decoration: none;
  }
}

@mixin icon-size($size) {
  width: $size;
  height: $size;
}

@keyframes skeletonShimmerAnimation {
  0% {
    opacity: 0.45;
  }

  100% {
    opacity: 0.9;
  }
}

@mixin skeleton-shimmer {
  animation: skeletonShimmerAnimation 0.5s linear infinite alternate;
  will-change: opacity;
}

@mixin skeleton-style {
  &::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: block;
    background-color: $color-grey-bright;
    border-radius: 3px;
  }
}

@mixin spacing($type, $direction: false) {
  @if $direction {
    &-#{$direction} {
      &--flush { #{$type}-#{$direction}: 0 !important; }

      &--tiny { #{$type}-#{$direction}: 5px !important; }

      &--x-small { #{$type}-#{$direction}: 10px !important; }

      &--small { #{$type}-#{$direction}: 15px !important; }

      &--medium { #{$type}-#{$direction}: 20px !important; }

      &--large { #{$type}-#{$direction}: 25px !important; }

      &--x-large { #{$type}-#{$direction}: 30px !important; }

      &--xx-large { #{$type}-#{$direction}: 35px !important; }

      &--ultra { #{$type}-#{$direction}: 40px !important; }
    }
  }

  @else {
    &--flush { #{$type}: 0 !important; }

    &--tiny { #{$type}: 5px !important; }

    &--x-small { #{$type}: 10px !important; }

    &--small { #{$type}: 15px !important; }

    &--medium { #{$type}: 20px !important; }

    &--large { #{$type}: 25px !important; }

    &--x-large { #{$type}: 30px !important; }

    &--xx-large { #{$type}: 35px !important; }

    &--ultra { #{$type}: 40px !important; }
  }
}
