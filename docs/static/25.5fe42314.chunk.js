webpackJsonp([25],{1868:function(n,e,o){var t=o(0),r=o(49),i=o(1231).PageRenderer;i.__esModule&&(i=i.default);var a=r({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:o(1894)}},componentWillMount:function(){},render:function(){return t.createElement(i,Object.assign({},this.props,{content:this.state.content}))}});a.__catalog_loader__=!0,n.exports=a},1894:function(n,e){n.exports='### Header\n```react\n  <DashboardHeader />\n```\n\n### Header with dropdowns\n```react\n  <DashboardHeader>\n    <DashboardHeaderDropdown title="One dropdown" icon={treeIcon}>\n      <DashboardHeaderDropdown.Option caption="One level" handleClick={() => {}} />\n      <DashboardHeaderDropdown.Option caption="Two levels" subcaption="With a subcaption" handleClick={() => {}} />\n      <DashboardHeaderDropdown.Option\n        inactive={true}\n        caption="Inactive item"\n        subcaption="Inactive item with a subcaption"\n        handleClick={() => {}}\n      />\n    </DashboardHeaderDropdown>\n\n    <DashboardHeaderDropdown title="Two dropdowns" icon={drinksIcon}>\n      <DashboardHeaderDropdown.SectionHeader title="This one has a header" />\n      <DashboardHeaderDropdown.Option caption="Wow, icons!" subcaption="So cool" icon={gearIcon} handleClick={() => {}} />\n    </DashboardHeaderDropdown>\n  </DashboardHeader>\n```\n\n### Header with notifications\n```react\n  <DashboardHeader>\n    <DashboardHeaderNotifications>\n      <DashboardHeaderNotifications.Notification title="You got notifications" close={() => {}}>\n        <div>\n          One line<br />\n          And a second line\n        </div>\n      </DashboardHeaderNotifications.Notification>\n    </DashboardHeaderNotifications>\n  </DashboardHeader>\n```\n\n### API\n\n##### DashboardHeader\n```table\ncolumns:\n  - Property\n  - Description\n  - Type\n  - Default\nrows:\n  - Property: children\n    Description: one or a combination of `DashboardHeaderDropdown` and/or `DashboardHeaderNotifications`\n    Type: Node\n```\n\n##### DashboardHeaderDropdown\n```table\ncolumns:\n  - Property\n  - Description\n  - Type\n  - Default\nrows:\n  - Property: icon\n    Description: the icon that appears before the dropdown title, passed to `Icon`; note that only the icon is visible on smaller screens.\n    Type: String\n  - Property: title\n    Description: Dropdown title\n    Type: String\n  - Property: subtitle\n    Description: Dropdown subtitle\n    Type: String or Number\n  - Property: children\n    Description: one or a combination of `DashboardHeaderDropdown.Option` or `DashboardHeaderDropdown.SectionHeader`\n    Type: Node\n```\n\n##### DashboardHeaderDropdown.SectionHeader\n```table\ncolumns:\n  - Property\n  - Description\n  - Type\n  - Default\nrows:\n  - Property: title\n    Description: text to be shown as header of a section\n    Type: Node\n```\n\n##### DashboardHeaderDropdown.Option\n```table\ncolumns:\n  - Property\n  - Description\n  - Type\n  - Default\nrows:\n  - Property: icon\n    Description: the icon that appears before the option title, passed to `Icon`\n    Type: String\n  - Property: caption\n    Description: Option caption\n    Type: Node\n  - Property: subcaption\n    Description: Option subcaption\n    Type: String or Number\n  - Property: handleClick\n    Description: function to be called when an Option is clicked\n    Type: Function\n```\n\n##### DashboardHeaderNotifications\n```table\ncolumns:\n  - Property\n  - Description\n  - Type\n  - Default\nrows:\n  - Property: children\n    Description: one or an array of `DashboardHeaderNotifications.Notification`\n    Type: Node\n```\n\n##### DashboardHeaderNotifications.Notification\n```table\ncolumns:\n  - Property\n  - Description\n  - Type\n  - Default\nrows:\n  - Property: title\n    Description: the title to be desplayed in the notification card\n    Type: Node\n  - Property: close\n    Description: function called when clickling the X on the card; the close button will be hidden if no function is passed\n    Type: Function\n  - Property: children\n    Description: the contents of the notification\n    Type: Node\n```\n'}});
//# sourceMappingURL=25.5fe42314.chunk.js.map